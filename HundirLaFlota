#include <iostream>
#include <time.h>
using namespace std;

int main() {
    srand(time(NULL));

    const int Tableroixj = 10;
    const short tamañoBarcoMenor = 3;
    const short tamañoBarcoMayor = 6;
    const char impacto = 'O';
    const char fallo = 'X'; 
    const char agua = '~'; 
    short tableroCompleto = 0;
    char TableroJugador1[Tableroixj][Tableroixj]; // inicializo las variables del tablero
    char TableroJugador2[Tableroixj][Tableroixj];

    for (int i = tamañoBarcoMenor; i <= tamañoBarcoMayor; i++) { // bucle para contar la cantidad de casillas ocupadas por barcos (para la comprobacion de victoria)
        tableroCompleto += i;
    }

    for (int i = 0; i < Tableroixj; i++) { // doble bucle for para inicializar ambos tableros
        for (int j = 0; j < Tableroixj; j++) {
            TableroJugador1[i][j] = agua;
            TableroJugador2[i][j] = agua;
        }
    }


    // PRESENTACION DEL JUEGO
cout << "  _    _ _    _ _   _ _____ _____ _____    _                 ______ _      ____ _______       " << endl;
cout << " | |  | | |  | | \\ | |  __ \\_   _|  __ \\  | |        /\\     |  ____| |    / __ \\__   __|/\\    " << endl;
cout << " | |__| | |  | |  \\| | |  | || | | |__) | | |       /  \\    | |__  | |   | |  | | | |  /  \\   " << endl;
cout << " |  __  | |  | | . ` | |  | || | |  _  /  | |      / /\\ \\   |  __| | |   | |  | | | | / /\\ \\  " << endl;
cout << " | |  | | |__| | |\\  | |__| || |_| | \\ \\  | |____ / ____ \\  | |    | |___| |__| | | |/ ____ \\ " << endl;
cout << " |_|  |_|\\____/|_| \\_|_____/_____|_|  \\_\\ |______/_/    \\_\\ |_|    |______\\____/  |_/_/    \\_\\" << endl;


cout << endl;
cout << "Jugadores, Bienvenidos al Hundir La Flota" << endl << endl;
cout << "El juego es para 2 jugadores, se randomizaran ñas posiciones de los barcos y podreis verlos unicamente al comenzar el juego" << endl;
cout << "Si disparais fuera del tablero o sobre un disparo anterior no se os penalizara y podreis repetir el disparo" << endl;
cout << "Gana el primer jugador en hundir todos los barcos del oponente" << endl << endl; 
cout << "Buena Suerte!" << endl;

system("pause"); // Esperamos a que los jugadores inicien el juego
system("cls");

    //INICIALIZAR TABLERO J1 CON BARCOS RANDOMIZADOS

    for (int i = tamañoBarcoMenor; i <= tamañoBarcoMayor; i++) {
        bool posicionado = false;
        char tamañoBarco = i + '0'; // casteo para que el numero del barco se convierta a char y pueda ser introducido en el tablero

        while (!posicionado) {
            int filaInicial = rand() % Tableroixj;
            int columnaInicial = rand() % Tableroixj;
            int orientacion = rand() % 2;
            bool valido = true;


            if (!orientacion) { // orientacion horizontal
                if (columnaInicial + i > Tableroixj) { // comprobamos que el barco no sobresalga del tablero por el borde derecho
                    valido = false;
                }
            }
            else { // orientacion vertical
                if (filaInicial + i > Tableroixj) { // comprobamos que el barco no sobresalgo por la parte inferior
                    valido = false;
                }
            }

            if (valido) {
                bool colision = false;
                if (!orientacion) { // si la orientacion es horizontal sumaremos el barco en el numero de columnas
                    for (int j = 0; j < i; j++) {
                        if (TableroJugador1[filaInicial][columnaInicial + j] != agua) { // si alguna posicion del barco cae en una zona sin agua es que hay una colision
                            colision = true;
                            break;
                        }
                    }
                    if (!colision) {
                        for (int j = 0; j < i; j++) {
                            TableroJugador1[filaInicial][columnaInicial + j] = tamañoBarco; // si no hay colision posicionamos el barco
                        }
                        posicionado = true; // marcamos que este barco ya ha sido posicionado
                    }

                }
                else { // la orientacion es verical, repetimos las comprobaciones
                    for (int k = 0; k < i; k++) {
                        if (TableroJugador1[filaInicial + k][columnaInicial] != agua) {
                            colision = true;
                            break;
                        }
                    }

                    if (!colision) {
                        for (int k = 0; k < i; k++) {
                            TableroJugador1[filaInicial + k][columnaInicial] = tamañoBarco;
                        }
                        posicionado = true;
                    }
                }
            }
        }
    }

    //INICIALIZAR TABLERO J2 CON BARCOS RANDOMIZADOS
    for (int i = tamañoBarcoMenor; i <= tamañoBarcoMayor; i++) {
        bool posicionado = false;
        char tamañoBarco = i + '0'; // casteo para que el numero del barco se convierta a char y pueda ser introducido en el tablero

        while (!posicionado) {
            int filaInicial = rand() % Tableroixj;
            int columnaInicial = rand() % Tableroixj;
            int orientacion = rand() % 2;
            bool valido = true;


            if (!orientacion) { // orientacion horizontal
                if (columnaInicial + i > Tableroixj) {
                    valido = false;
                }
            }
            else { // orientacion vertical
                if (filaInicial + i > Tableroixj) {
                    valido = false;
                }
            }

            if (valido) {
                bool colision = false;
                if (!orientacion) {
                    for (int j = 0; j < i; j++) {
                        if (TableroJugador2[filaInicial][columnaInicial + j] != agua) {
                            colision = true;
                            break;
                        }
                    }
                    if (!colision) {
                        for (int j = 0; j < i; j++) {
                            TableroJugador2[filaInicial][columnaInicial + j] = tamañoBarco;
                        }
                        posicionado = true;
                    }

                }
                else {
                    for (int k = 0; k < i; k++) {
                        if (TableroJugador2[filaInicial + k][columnaInicial] != agua) {
                            colision = true;
                            break;
                        }
                    }

                    if (!colision) {
                        for (int k = 0; k < i; k++) {
                            TableroJugador2[filaInicial + k][columnaInicial] = tamañoBarco;
                        }
                        posicionado = true;
                    }
                }
            }
        }
    }

    // mostramos en pantalla ambos tableros con los barcos posicionados
    cout << "------------------" << endl;
    cout << "Tablero jugador 1: " << endl;
    cout << "------------------" << endl;

    for (int i = 0; i < Tableroixj; i++) {

        for (int j = 0; j < Tableroixj; j++) {
            cout << TableroJugador1[i][j] << " ";
        }

        cout << endl;
    }

    cout << endl << endl;

    cout << "------------------" << endl;
    cout << "Tablero jugador 2: " << endl;
    cout << "------------------" << endl;

    for (int i = 0; i < Tableroixj; i++) {

        for (int j = 0; j < Tableroixj; j++) {
            cout << TableroJugador2[i][j] << " ";
        }

        cout << endl;
    }

    system("pause"); // pausamos la ejecucion para que los jugadores puedan ver la posicion de los barcos antes de la partida
    system("cls"); // limpiamos la pantalla

    bool gameplay = true;
    bool acierto = false;
    short aciertosJ1 = 0;
    short aciertosJ2 = 0;

    while (gameplay) {
        int fila;
        int columna;
        bool turno = true;

        while (turno) { // iniciamos con el turno de J1 y mostramos en pantalla el tablero del oponente
            turno = false;
            cout << "------------------" << endl;
            cout << " Turno Jugador 1:" << endl;
            cout << "------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) { // recoorremos las posiciones del tablero y ocultamos todo aquello que no sea un disparo, para ocultar los barcos
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador2[i][j] == fallo || TableroJugador2[i][j] == impacto) {
                        cout << TableroJugador2[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1) // añadimos un espacio entra cada posicion para mejorar la visibilidad menoss en la ultima posicion
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }

            do {
                cout << "Introduce una fila (1-10): " << endl;
                cin >> fila;
                fila--;
                cout << "Introduce una columna (1-10): " << endl;
                cin >> columna;
                columna--;


                if (fila < 0 || fila >= Tableroixj || columna < 0 || columna >= Tableroixj) { // comprobacion de si el disparo va fuera del tablero
                    cout << "Disparo fuera del tablero, vuelve a probar" << endl;
                    acierto = false;
                }
                else {
                    acierto = true;

                }
            } while (!acierto); // obligamos a repetir hasta que el usuario introduzca unas coordenadas validas

            if (acierto) {

                if (TableroJugador2[fila][columna] == agua) { // si la posicion en la que dispara hay agua hay un fallo y se asigna una X
                    cout << "Fallaste!" << endl;
                    TableroJugador2[fila][columna] = fallo;


                }
                else if (TableroJugador2[fila][columna] != fallo && TableroJugador2[fila][columna] != impacto) { // si no hay agua, X ni O significa que no disparo nunca en esa posicion y que ha dado en el blanco
                    cout << "Acertaste!" << endl;
                    TableroJugador2[fila][columna] = impacto;
                    aciertosJ1++; // si acierta se suma al contador de aciertos 


                }
                else { // cualquier otra opcion seria que ya disparo en esa posicion
                    cout << "Ya disparaste en esa posicion, vuelve a probar" << endl;
                    turno = true; // asignamos true en el bucle para que repita el proceso hasta que haga un disparo valido
                }

            }
        }

        turno = true; // asignamos true para que se pueda inicializar el siguiente bucle del turno J2
        acierto = false;
        while (turno) { // repetimos el sistema de gameplay del J1
            turno = false;
            cout << "------------------" << endl;
            cout << " Turno Jugador 2: " << endl;
            cout << "------------------" << endl;
            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador1[i][j] == fallo || TableroJugador1[i][j] == impacto) {
                        cout << TableroJugador1[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1) // para asignar un espacio entre cada ~ menos en la ultima posiciion
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }
            do {
                cout << "Introduce una fila (1-10): " << endl;
                cin >> fila;
                fila--;
                cout << "Introduce una columna (1-10): " << endl;
                cin >> columna;
                columna--;


                if (fila < 0 || fila >= Tableroixj || columna < 0 || columna >= Tableroixj) {
                    cout << "Disparo fuera del tablero, vuelve a probar" << endl;
                    acierto = false;
                }
                else {
                    acierto = true;
                }
            } while (!acierto);

            if (acierto) {

                if (TableroJugador1[fila][columna] == agua) {
                    cout << "Fallaste!" << endl;
                    TableroJugador1[fila][columna] = fallo;

                }
                else if (TableroJugador1[fila][columna] != fallo && TableroJugador1[fila][columna] != impacto) {
                    cout << "Acertaste!" << endl;
                    aciertosJ2++;
                    TableroJugador1[fila][columna] = impacto;
                }
                else {
                    cout << "Ya disparaste en esa posicion, vuelve a probar" << endl;
                    turno = true;
                }

            }
        }
        turno = false;


        if (aciertosJ1 == tableroCompleto && aciertosJ2 == tableroCompleto) {
            system("cls");
            cout << "VAYA HABEIS EMPATADO!!!!" << endl << "Jugar otra partida para encontrar al vencedor!!" << endl;
            cout << "--------------------" << endl; // mostramos tableros de ambos jugadores
            cout << " Tablero Jugador 1:" << endl;
            cout << "--------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador1[i][j] == fallo || TableroJugador1[i][j] == impacto) {
                        cout << TableroJugador1[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1)
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }
            cout << "--------------------" << endl;
            cout << " Tablero Jugador 2:" << endl;
            cout << "--------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador2[i][j] == fallo || TableroJugador2[i][j] == impacto) {
                        cout << TableroJugador2[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1)
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }
            break;
        }
        else if (aciertosJ1 == tableroCompleto) { // comprobamos que el numero de aciertos sea igual a la cantidad de barcos posicionados
            cout << "Jugador 1: HA GANADO LA PARTIDA!!!!" << endl;
            system("cls"); // limpiamos la pantalla
            cout << "--------------------" << endl; // mostramos el tablero de ambos jugadores con un mensaje de victoria y derrota
            cout << " Ganador Jugador 1:" << endl;
            cout << "--------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador1[i][j] == fallo || TableroJugador1[i][j] == impacto) {
                        cout << TableroJugador1[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1)
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }

            cout << "--------------------" << endl;
            cout << " Perdedor Jugador 2:" << endl;
            cout << "--------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador2[i][j] == fallo || TableroJugador2[i][j] == impacto) {
                        cout << TableroJugador2[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1)
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }
            break;
        }
        else if (aciertosJ2 == tableroCompleto) { // misma comprobacion pero para el J2
            system("cls");
            cout << "Jugador 2: HA GANADO LA PARTIDA!!!!" << endl;
            cout << "--------------------" << endl; // mostramos tableros de ganador y perdedor
            cout << " Ganador Jugador 2:" << endl;
            cout << "--------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador2[i][j] == fallo || TableroJugador2[i][j] == impacto) {
                        cout << TableroJugador2[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1)
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }

            cout << "--------------------" << endl;
            cout << " Perdedor Jugador 1:" << endl;
            cout << "--------------------" << endl;

            for (int i = 0; i < Tableroixj; i++) {
                for (int j = 0; j < Tableroixj; j++) {
                    if (TableroJugador1[i][j] == fallo || TableroJugador1[i][j] == impacto) {
                        cout << TableroJugador1[i][j];

                    }
                    else {
                        cout << agua;
                    }
                    if (j < Tableroixj - 1)
                    {
                        cout << " ";
                    }

                }
                cout << endl;
            }
            break;

        }

    }
}
